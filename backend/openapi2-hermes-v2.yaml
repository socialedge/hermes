swagger: '2.0'
info:
  description: "The specification of a Hermes backend API for frontend and third party software"
  version: "1.9.0"
  title: "SocialEdge Hermes API"
  contact:
    email: "socialedge.team@gmail.com"
  license:
    name: "GNU General Public License, v3"
    url: "https://www.gnu.org/licenses/gpl-3.0.txt"
schemes:
  - "http"
produces:
  - "application/vnd.socialedge.hermes.v2+json"
tags:
- name: "agencies"
- name: "stations"
- name: "lines"
- name: "schedules"
- name: "collisions"
  description: Schedule collisions calculations
paths:
  /agencies:
    get:
      tags:
        - agencies
      operationId: "listAgencies"
      summary: "Lists all agencies from the system that the user has an access to"
      parameters:
        - name: "size"
          in: "query"
          description: "Limits an amount of entities per page"
          required: false
          type: "integer"
        - name: "page"
          in: "query"
          description: "Number of list page to display"
          required: false
          type: "integer"
        - name: "sort"
          in: "query"
          description: "Defines a sort params for the query e.g ?sort=name,ASC"
          required: false
          type: "string"
        - name: "filter"
          in: "query"
          description: "Defines a filter params for the query e.g ?filter=filed,value (e.g. ?filter=name,john)"
          required: false
          type: "string"
      responses:
        200:
          description: A list of Agencies
          headers:
            "X-Page-Size":
              description: Amount of elements per page if page was set by query parameter
              type: integer
            "X-Page-Number":
              description: A page number if page was set by query parameter
              type: integer
            "X-Page-Total":
              description: A total amount of pages required to page all resources with given X-Page-Size
              type: integer
            "X-Resource-Total-Records":
              description: A total amount of records residing on this endpoint
              type: integer
          schema:
            type: array
            minItems: 0
            items:
              $ref: '#/definitions/AgencyDTO'
        500:
          description: Internal server error, please contact support
          schema:
            $ref: '#/definitions/ErrorDTO'
    post:
      tags:
        - agencies
      operationId: "createAgency"
      summary: "Creates new agency"
      parameters:
        - name: body
          in: body
          description: "Agency to add to the store"
          required: true
          schema:
            $ref: '#/definitions/AgencyDTO'
      responses:
        201:
          description: An Agency created
          schema:
            $ref: '#/definitions/AgencyDTO'
        400:
          description: Problem with the request, such as a missing, invalid or type mismatched parameter
          schema:
            $ref: '#/definitions/ErrorDTO'
        500:
          description: Internal server error, please contact support
          schema:
            $ref: '#/definitions/ErrorDTO'
  /agencies/{id}:
    get:
      tags:
        - agencies
      operationId: "getAgency"
      summary: Gets an Agency based by id
      parameters:
        - name: id
          in: path
          description: ID of an Agency to fetch
          required: true
          type: string
      responses:
        200:
          description: Agency fetched
          schema:
            $ref: '#/definitions/AgencyDTO'
        404:
          description: Agency not found
        500:
          description: Internal server error, please contact support
          schema:
            $ref: '#/definitions/ErrorDTO'
    put:
      tags:
        - agencies
      operationId: "replaceAgency"
      summary: Updates an agency
      parameters:
        - name: id
          in: path
          description: ID of an Agency to update
          required: true
          type: string
        - name: body
          in: body
          description: Full Agency body to update existing one
          required: true
          schema:
            $ref: '#/definitions/AgencyDTO'
      responses:
        200:
          description: Agency created
          schema:
            $ref: '#/definitions/AgencyDTO'
        404:
          description: Agency not found
        400:
          description: Problem with the request, such as a missing, invalid or type mismatched parameter
          schema:
            $ref: '#/definitions/ErrorDTO'
        500:
          description: Internal server error, please contact support
          schema:
            $ref: '#/definitions/ErrorDTO'
    delete:
      tags:
        - agencies
      operationId: "deleteAgency"
      summary: Deletes a single Agency by id
      parameters:
        - name: id
          in: path
          description: ID of an Agency to delete
          required: true
          type: string
      responses:
        204:
          description: Agency deleted
        404:
          description: Agency not found
        500:
          description: Internal server error, please contact support
          schema:
            $ref: '#/definitions/ErrorDTO'
  /stations:
    get:
      tags:
        - stations
      operationId: "listStations"
      summary: Lists all Stations from the system that the user has access to
      parameters:
        - name: "size"
          in: "query"
          description: "Limits an amount of entities per page"
          required: false
          type: "integer"
        - name: "page"
          in: "query"
          description: "Number of list page to display"
          required: false
          type: "integer"
        - name: "sort"
          in: "query"
          description: "Defines a sort params for the query e.g ?sort=name,ASC"
          required: false
          type: "string"
        - name: "filter"
          in: "query"
          description: "Defines a filter params for the query e.g ?filter=filed,value (e.g. ?filter=name,john)"
          required: false
          type: "string"
      responses:
        200:
          description: A list of Stations
          headers:
            "X-Page-Size":
              description: Amount of elements per page if page was set by query parameter
              type: integer
            "X-Page-Number":
              description: A page number if page was set by query parameter
              type: integer
            "X-Page-Total":
              description: A total amount of pages required to page all resources with given X-Page-Size
              type: integer
            "X-Resource-Total-Records":
              description: A total amount of records residing on this endpoint
              type: integer
          schema:
            type: array
            minItems: 0
            items:
              $ref: '#/definitions/StationDTO'
        500:
          description: Internal server error, please contact support
          schema:
            $ref: '#/definitions/ErrorDTO'
    post:
      tags:
        - stations
      operationId: "createStation"
      summary: Creates new Station
      parameters:
        - name: body
          in: body
          description: Station to add to the store
          required: true
          schema:
            $ref: '#/definitions/StationDTO'
      responses:
        201:
          description: A Station created
          schema:
            $ref: '#/definitions/StationDTO'
        400:
          description: Problem with the request, such as a missing, invalid or type mismatched parameter
          schema:
            $ref: '#/definitions/ErrorDTO'
        500:
          description: Internal server error, please contact support
          schema:
            $ref: '#/definitions/ErrorDTO'
  /stations/{id}:
    get:
      tags:
        - stations
      operationId: "getStation"
      summary: Returns a Stations based on a single ID
      parameters:
        - name: id
          in: path
          description: ID of a Station to fetch
          required: true
          type: string
      responses:
        200:
          description: Line fetched
          schema:
            $ref: '#/definitions/StationDTO'
        404:
          description: Station not found
        500:
          description: Internal server error, please contact support
          schema:
            $ref: '#/definitions/ErrorDTO'
    put:
      tags:
        - stations
      operationId: "replaceStation"
      summary: Updates a Station
      parameters:
        - name: id
          in: path
          description: ID of a Station to update
          required: true
          type: string
        - name: body
          in: body
          description: Full Station body to update existing one
          required: true
          schema:
            $ref: '#/definitions/StationDTO'
      responses:
        200:
          description: Station created
          schema:
            $ref: '#/definitions/StationDTO'
        404:
          description: Station not found
        400:
          description: Problem with the request, such as a missing, invalid or type mismatched parameter
          schema:
            $ref: '#/definitions/ErrorDTO'
        500:
          description: Internal server error, please contact support
          schema:
            $ref: '#/definitions/ErrorDTO'
    delete:
      tags:
        - stations
      operationId: "deleteStation"
      summary: Deletes a single Station based on the ID supplied
      parameters:
        - name: id
          in: path
          description: ID of a Station to delete
          required: true
          type: string
      responses:
        204:
          description: Station deleted
        404:
          description: Station not found
        500:
          description: Internal server error, please contact support
          schema:
            $ref: '#/definitions/ErrorDTO'
  /lines:
    get:
      tags:
        - lines
      operationId: "listLines"
      summary: Lists all lines from the system that the user has access to
      parameters:
        - name: "size"
          in: "query"
          description: "Limits an amount of entities per page"
          required: false
          type: "integer"
        - name: "page"
          in: "query"
          description: "Number of list page to display"
          required: false
          type: "integer"
        - name: "sort"
          in: "query"
          description: "Defines a sort params for the query e.g ?sort=name,ASC"
          required: false
          type: "string"
        - name: "filter"
          in: "query"
          description: "Defines a filter params for the query e.g ?filter=filed,value (e.g. ?filter=name,john)"
          required: false
          type: "string"
      responses:
        200:
          description: A list of Lines
          headers:
            "X-Page-Size":
              description: Amount of elements per page if page was set by query parameter
              type: integer
            "X-Page-Number":
              description: A page number if page was set by query parameter
              type: integer
            "X-Page-Total":
              description: A total amount of pages required to page all resources with given X-Page-Size
              type: integer
            "X-Resource-Total-Records":
              description: A total amount of records residing on this endpoint
              type: integer
          schema:
            type: array
            minItems: 0
            items:
              $ref: '#/definitions/LineDTO'
        500:
          description: Internal server error, please contact support
          schema:
            $ref: '#/definitions/ErrorDTO'
    post:
      tags:
        - lines
      operationId: "createLine"
      summary: Creates new Line
      parameters:
        - name: body
          in: body
          description: Line to add to the store
          required: true
          schema:
            $ref: '#/definitions/LineDTO'
      responses:
        201:
          description: A Line created
          schema:
            $ref: '#/definitions/LineDTO'
        400:
          description: Problem with the request, such as a missing, invalid or type mismatched parameter
          schema:
            $ref: '#/definitions/ErrorDTO'
        500:
          description: Internal server error, please contact support
          schema:
            $ref: '#/definitions/ErrorDTO'
  /lines/{id}:
    get:
      tags:
        - lines
      operationId: "getLine"
      summary: Returns a Line based on a single ID
      parameters:
        - name: id
          in: path
          description: ID of a Line to fetch
          required: true
          type: string
      responses:
        200:
          description: Line fetched
          schema:
            $ref: '#/definitions/LineDTO'
        404:
          description: Line not found
        500:
          description: Internal server error, please contact support
          schema:
            $ref: '#/definitions/ErrorDTO'
    put:
      tags:
        - lines
      operationId: "replaceLine"
      summary: Updates a Line
      parameters:
        - name: id
          in: path
          description: ID of a Line to update
          required: true
          type: string
        - name: body
          in: body
          description: Full Line body to update existing one
          required: true
          schema:
            $ref: '#/definitions/LineDTO'
      responses:
        200:
          description: Line created
          schema:
            $ref: '#/definitions/LineDTO'
        404:
          description: Line not found
        400:
          description: Problem with the request, such as a missing, invalid or type mismatched parameter
          schema:
            $ref: '#/definitions/ErrorDTO'
        500:
          description: Internal server error, please contact support
          schema:
            $ref: '#/definitions/ErrorDTO'
    delete:
      tags:
        - lines
      operationId: "deleteLine"
      summary: Deletes a single Line based on the ID supplied
      parameters:
        - name: id
          in: path
          description: ID of an Line to delete
          required: true
          type: string
      responses:
        204:
          description: Line deleted
        404:
          description: Line not found
        500:
          description: Internal server error, please contact support
          schema:
            $ref: '#/definitions/ErrorDTO'
  /schedules:
    get:
      tags:
        - schedules
      operationId: "listSchedules"
      summary: "Lists all Schedules from the system that the user has access to"
      parameters:
        - name: "size"
          in: "query"
          description: "Limits an amount of entities per page"
          required: false
          type: "integer"
        - name: "page"
          in: "query"
          description: "Number of list page to display"
          required: false
          type: "integer"
        - name: "sort"
          in: "query"
          description: "Defines a sort params for the query e.g ?sort=name,ASC"
          required: false
          type: "string"
        - name: "filter"
          in: "query"
          description: "Defines a filter params for the query e.g ?filter=filed,value (e.g. ?filter=name,john)"
          required: false
          type: "string"
      responses:
        200:
          description: A list of Schedules
          headers:
            "X-Page-Size":
              description: Amount of elements per page if page was set by query parameter
              type: integer
            "X-Page-Number":
              description: A page number if page was set by query parameter
              type: integer
            "X-Page-Total":
              description: A total amount of pages required to page all resources with given X-Page-Size
              type: integer
            "X-Resource-Total-Records":
              description: A total amount of records residing on this endpoint
              type: integer
          schema:
            type: array
            minItems: 0
            items:
              $ref: '#/definitions/ScheduleDTO'
        500:
          description: Internal server error, please contact support
          schema:
            $ref: '#/definitions/ErrorDTO'
    post:
      tags:
        - schedules
      operationId: "generateSchedule"
      summary: Generates a new Schedule by given specification
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ScheduleSpecificationDTO'
      responses:
        201:
          description: Generated schedule
          schema:
            $ref: '#/definitions/ScheduleDTO'
        400:
          description: Problem with the request, such as a missing, invalid or type mismatched parameter
          schema:
            $ref: '#/definitions/ErrorDTO'
        500:
          description: Internal server error, please contact support
          schema:
            $ref: '#/definitions/ErrorDTO'
  /schedules/{id}:
    get:
      tags:
        - schedules
      operationId: "getSchedule"
      summary: Gets a schedule by id
      parameters:
        - name: id
          in: path
          description: ID of a Schedule to fetch
          required: true
          type: string
      responses:
        200:
          description: Schedule fetched
          schema:
            $ref: '#/definitions/ScheduleDTO'
        404:
          description: Schedule not found
        500:
          description: Internal server error, please contact support
          schema:
            $ref: '#/definitions/ErrorDTO'
    put:
      tags:
        - schedules
      operationId: "replaceSchedule"
      summary: Updates a Schedule
      parameters:
        - name: id
          in: path
          description: ID of a Schedule to update
          required: true
          type: string
        - name: body
          in: body
          description: Full Schedule body to update existing one
          required: true
          schema:
            $ref: '#/definitions/ScheduleDTO'
      responses:
        200:
          description: Schedule created
          schema:
            $ref: '#/definitions/ScheduleDTO'
        404:
          description: Schedule not found
        400:
          description: Problem with the request, such as a missing, invalid or type mismatched parameter
          schema:
            $ref: '#/definitions/ErrorDTO'
        500:
          description: Internal server error, please contact support
          schema:
            $ref: '#/definitions/ErrorDTO'
    delete:
      tags:
        - schedules
      operationId: "deleteSchedule"
      summary: Deletes a schedule by id
      parameters:
        - name: id
          in: path
          description: ID of a schedule to delete
          required: true
          type: string
      responses:
        204:
          description: Schedule deleted
        404:
          description: Schedule not found
        500:
          description: Internal server error, please contact support
          schema:
            $ref: '#/definitions/ErrorDTO'
  /schedules/{id}/inboundTrips:
    get:
      tags:
        - schedules
      operationId: "listScheduleInboundTrips"
      summary: Lists all inbound Trips of the Schedule
      parameters:
        - name: id
          in: path
          description: ID of a Schedule
          required: true
          type: string
      responses:
        200:
          description: Inbound Trips of the Schedule with given Id
          schema:
            type: array
            items:
              $ref: '#/definitions/TripDTO'
        404:
          description: Schedule not found
        500:
          description: Internal server error, please contact support
          schema:
            $ref: '#/definitions/ErrorDTO'
  /schedules/{id}/outboundTrips:
    get:
      tags:
        - schedules
      operationId: "listScheduleOutboundTrips"
      summary: Lists all outbound Trips of the Schedule
      parameters:
        - name: id
          in: path
          description: ID of a Schedule
          required: true
          type: string
      responses:
        200:
          description: Inbound Trips of the Schedule with given Id
          schema:
            type: array
            items:
              $ref: '#/definitions/TripDTO'
        404:
          description: Schedule not found
        500:
          description: Internal server error, please contact support
          schema:
            $ref: '#/definitions/ErrorDTO'
  /schedules/{id}/collisions:
    get:
      tags:
        - schedules
        - collisions
      operationId: "listScheduleCollisions"
      summary: Calculates collisions for a given Schedule
      parameters:
        - name: id
          in: path
          description: ID of a Schedule
          required: true
          type: string
        - name: "size"
          in: "query"
          description: "Limits an amount of entities per page"
          required: false
          type: "integer"
        - name: "page"
          in: "query"
          description: "Number of list page to display"
          required: false
          type: "integer"
        - name: "sort"
          in: "query"
          description: "Defines a sort params for the query e.g ?sort=name,ASC"
          required: false
          type: "string"
        - name: "filter"
          in: "query"
          description: "Defines a filter params for the query e.g ?filter=filed,value (e.g. ?filter=name,john)"
          required: false
          type: "string"
      responses:
        200:
          description: Collisions for a given Schedule
          headers:
            "X-Page-Size":
              description: Amount of elements per page if page was set by query parameter
              type: integer
            "X-Page-Number":
              description: A page number if page was set by query parameter
              type: integer
            "X-Page-Total":
              description: A total amount of pages required to page all resources with given X-Page-Size
              type: integer
            "X-Resource-Total-Records":
              description: A total amount of records residing on this endpoint
              type: integer
          schema:
            type: array
            items:
              $ref: '#/definitions/CollisionDTO'
        404:
          description: Schedule not found
        500:
          description: Internal server error, please contact support
          schema:
            $ref: '#/definitions/ErrorDTO'
  /collisions:
    post:
      tags:
        - collisions
      operationId: "getStopCollisions"
      summary: Calculates collisions for a given Stop
      parameters:
        - name: body
          in: body
          description: Stop object to calculate collisions for
          required: true
          schema:
            $ref: '#/definitions/StopDTO'
      responses:
        200:
          description: Collisions for a given Stop
          schema:
            type: array
            items:
              $ref: '#/definitions/CollisionDTO'
        400:
          description: Problem with the request, such as a missing, invalid or type mismatched parameter
          schema:
            $ref: '#/definitions/ErrorDTO'
        500:
          description: Internal server error, please contact support
          schema:
            $ref: '#/definitions/ErrorDTO'
definitions:
  LocationDTO:
    type: object
    required:
    - latitude
    - longitude
    properties:
      latitude:
        type: number
        format: double
        minimum: -90
        maximum: 90
      longitude:
        type: number
        format: double
        minimum: -180
        maximum: 180
  AgencyDTO:
    type: object
    required:
    - name
    - language
    - timeZone
    description: >-
      An Agency is an operator of a public transit network, often a public
      authority.
    properties:
      id:
        type: string
        readOnly: true
        minLength: 24
        maxLength: 24
      name:
        type: string
        minLength: 1
      language:
        type: string
        minLength: 2
        maxLength: 2
      timeZone:
        type: string
        minLength: 4
      phone:
        type: string
      url:
        type: string
  StationDTO:
    type: object
    required:
    - name
    - vehicleType
    - location
    - dwell
    description: >-
      A stop is a location where vehicles stop to pick up or drop off
      passengers.
    properties:
      id:
        type: string
        readOnly: true
        minLength: 24
        maxLength: 24
      name:
        type: string
        minLength: 1
      description:
        type: string
      vehicleType:
        type: array
        minItems: 1
        items:
          type: string
      location:
        $ref: '#/definitions/LocationDTO'
      dwell:
        type: integer
        format: int64
        description: Dwell time in seconds (long)
        minLength: 2
  LineDTO:
    type: object
    required:
    - name
    - vehicleType
    - agencyId
    - inboundRoute
    description: >-
      Lines represents a group of Routes that are displayed to riders as a
      single service.
    properties:
      id:
        type: string
        readOnly: true
        minLength: 24
        maxLength: 24
      agencyId:
        type: string
        minLength: 24
        maxLength: 24
      name:
        type: string
        minLength: 1
      description:
        type: string
      vehicleType:
        type: string
        minLength: 1
      url:
        type: string
      inboundRoute:
        $ref: '#/definitions/RouteDTO'
      outboundRoute:
        $ref: '#/definitions/RouteDTO'
  RouteDTO:
    type: array
    minItems: 1
    uniqueItems: true
    description: >-
      Transit Routes define waypoints for a journey taken by a vehicle along a
      transit line.
    items:
      $ref: '#/definitions/SegmentDTO'
  SegmentDTO:
    type: object
    description: 'Represents an edge of the journey graph, defined by Route'
    properties:
      begin:
        $ref: '#/definitions/SegmentVertexDTO'
      end:
        $ref: '#/definitions/SegmentVertexDTO'
      length:
        type: number
        format: double
      waypoints:
        type: array
        description: Contains all waypoints required to travel from Segment start to end
        items:
          $ref: '#/definitions/LocationDTO'
  SegmentVertexDTO:
    type: object
    description: 'Represents a vertex (stop) of a Segment'
    required:
      - stationId
    properties:
      stationId:
        type: string
      name:
        type: string
      location:
        $ref: '#/definitions/LocationDTO'
  ScheduleDTO:
    type: object
    required:
      - availability
      - lineId
      - inboundTrips
    properties:
      id:
        type: string
        readOnly: true
        minLength: 24
        maxLength: 24
      description:
        type: string
      lineId:
        type: string
        minLength: 24
        maxLength: 24
      inboundTrips:
        type: array
        description: Inbound trips
        items:
          $ref: '#/definitions/TripDTO'
      outboundTrips:
        type: array
        description: Outbound trips
        items:
          $ref: '#/definitions/TripDTO'
      availability:
        $ref: '#/definitions/AvailabilityDTO'
  AvailabilityDTO:
    type: object
    required:
      - dayOfWeek
      - startDate
    description: >-
      Defines a range of dates between which the {@link Schedule} is available
      and the days of the week when it is available (such as Monday through
      Friday). It also may define specific days when a trip is not available,
      such as holidays.
    properties:
      dayOfWeek:
        type: array
        minItems: 1
        items:
          type: string
      startDate:
        type: string
        format: date
      endDate:
        type: string
        format: date
      exceptionDays:
        type: array
        items:
          type: string
          format: date
  TripDTO:
    type: object
    required:
      - vehicleId
      - stops
    description: A Trip represents a journey taken by a vehicle through Stations.
    properties:
      vehicleId:
        type: integer
        minimum: 0
      headsign:
        type: string
      stops:
        type: array
        items:
          $ref: '#/definitions/StopDTO'
  StopDTO:
    type: object
    required:
      - stationId
      - arrival
    description: >-
      Defines when a vehicle arrives at a Station, how long it stays there, and
      when it departs.
    properties:
      name:
        type: string
        description: Name of the Station
        readOnly: true
      stationId:
        type: string
        minLength: 24
        maxLength: 24
      arrival:
        type: string
        description: Local Arrival Time (ISO-8601)
        minLength: 1
      departure:
        type: string
        description: Local Departure Time (ISO-8601)
  CollisionDTO:
    type: object
    required:
      - stationId
      - givenStop
      - collidingStop
    description: Describes a collision for a given Stop
    properties:
      stationId:
        type: string
      description:
        type: string
        description: Usually contains a name of a Schedule that a given Stop collides with
      givenStop:
        type: object
        required:
          - arrival
          - departure
        properties:
          arrival:
            type: string
            format: date
          departure:
            type: string
            format: date
      collidingStop:
        type: object
        required:
          - arrival
          - departure
        properties:
          arrival:
            type: string
            format: date
          departure:
            type: string
            format: date
  ScheduleSpecificationDTO:
    type: object
    description: Specification of a schedule to be generated
    properties:
      description:
        type: string
      lineId:
        type: string
        minLength: 24
        maxLength: 24
      availability:
        $ref: '#/definitions/AvailabilityDTO'
      startTimeInbound:
        type: string
        description: Local time in ISO-8601 format (HH:mm - HH:mm:ss.SSSSSSSSS)
        minLength: 5
      endTimeInbound:
        type: string
        description: Local time in ISO-8601 format (HH:mm - HH:mm:ss.SSSSSSSSS)
        minLength: 5
      startTimeOutbound:
        type: string
        description: Local time in ISO-8601 format (HH:mm - HH:mm:ss.SSSSSSSSS)
        minLength: 5
      endTimeOutbound:
        type: string
        description: Local time in ISO-8601 format (HH:mm - HH:mm:ss.SSSSSSSSS)
        minLength: 5
      headway:
        type: integer
        format: int64
        description: Headway in seconds (long)
        minLength: 2
      averageSpeed:
        type: string
        minLength: 1
      minLayover:
        type: integer
        format: int64
        description: Layover in secords (long)
        minLength: 2
  ErrorDTO:
    type: object
    description: Describes a failure occured
    properties:
      timestamp:
        type: string
        format: date
      status:
        type: integer
      error:
        type: string
      exception:
        type: string
        description: A java exception class name
      message:
        type: string
      path:
        type: string
